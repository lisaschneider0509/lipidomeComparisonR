for (i in 3:ncol(sample_df[,1: ncol(sample_df)])){
hist(sample_df[,i])
# name_col <- colnames(sample_df)[i]
# p2 <- ggplot(sample_df, aes(sample_df[,i]))
# p2 <- p2 + geom_histogram(aes(y=..density..), binwidth = 0.5, fill = "grey", color = "black")
# # p2 <- p2 + geom_density(col = "black", adjust = 1)
# # p2 <- p2 + geom_density(col = "red", adjust = 2)
# p2 <- p2 + labs(title = name_col)
}
par(mfrow=c(1,2))
for (i in 3:ncol(sample_df[,1: ncol(sample_df)])){
hist(sample_df[,i])
# name_col <- colnames(sample_df)[i]
# p2 <- ggplot(sample_df, aes(sample_df[,i]))
# p2 <- p2 + geom_histogram(aes(y=..density..), binwidth = 0.5, fill = "grey", color = "black")
# # p2 <- p2 + geom_density(col = "black", adjust = 1)
# # p2 <- p2 + geom_density(col = "red", adjust = 2)
# p2 <- p2 + labs(title = name_col)
}
par(mfrow=c(4,2))
for (i in 3:ncol(sample_df[,1: ncol(sample_df)])){
hist(sample_df[,i])
# name_col <- colnames(sample_df)[i]
# p2 <- ggplot(sample_df, aes(sample_df[,i]))
# p2 <- p2 + geom_histogram(aes(y=..density..), binwidth = 0.5, fill = "grey", color = "black")
# # p2 <- p2 + geom_density(col = "black", adjust = 1)
# # p2 <- p2 + geom_density(col = "red", adjust = 2)
# p2 <- p2 + labs(title = name_col)
}
par(mfrow=c(2,2))
for (i in 3:ncol(sample_df[,1: ncol(sample_df)])){
hist(sample_df[,i])
# name_col <- colnames(sample_df)[i]
# p2 <- ggplot(sample_df, aes(sample_df[,i]))
# p2 <- p2 + geom_histogram(aes(y=..density..), binwidth = 0.5, fill = "grey", color = "black")
# # p2 <- p2 + geom_density(col = "black", adjust = 1)
# # p2 <- p2 + geom_density(col = "red", adjust = 2)
# p2 <- p2 + labs(title = name_col)
}
par(mfrow=c(2,2))
for (i in 3:ncol(sample_df[,1: ncol(sample_df)])){
hist(sample_ID[,i],freq=FALSE) # histogram
lines(density(sample_ID[,i]), lwd=2) # histogram mit density kurve
lines(density(sample_ID[,i],adjust=1.5),col=2,lwd=2) # Doppelte Bandbreite
}
for (i in 3:ncol(sample_df[,1: ncol(sample_df)])){
hist(sample_ID[, i],freq=FALSE) # histogram
lines(density(sample_ID[, i]), lwd=2) # histogram mit density kurve
lines(density(sample_ID[, i],adjust=1.5),col=2,lwd=2) # Doppelte Bandbreite
}
par(mfrow=c(2,2))
for (i in 3:ncol(sample_df[,1: ncol(sample_df)])){
hist(sample_df[,i])
lines(density(sample_df[,i]))
}
par(mfrow=c(2,2))
for (i in 3:ncol(sample_df[,1: ncol(sample_df)])){
hist(sample_df[,i])
lines(density(sample_df[,i]))
lines(density(sample_df[,i],adjust=1.5),col=2,lwd=2) # Doppelte Bandbreite
}
for (i in 3:ncol(sample_df[,1: ncol(sample_df)])){
hist(sample_df[,i])
lines(density(sample_df[,i]))
lines(density(sample_df[,i],adjust=1.5),col=2) # Doppelte Bandbreite
}
qq <- qqnorm(working_data$`L_11-HETE_10.43`)
par(mfrow=c(2,2))
for (i in 3:ncol(sample_df[,1: ncol(sample_df)])){
col_name <- colnames(sample_df[,i])
hist(sample_df[,i])
lines(density(sample_df[,i]))
lines(density(sample_df[,i],adjust=1.5),col=2) # Doppelte Bandbreite
title(main = col_name, xlab = "x-Achse", ylab = "y-Achse")
}
par(mfrow=c(2,2))
for (i in 3:ncol(sample_df[,1: ncol(sample_df)])){
col_name <- colnames(sample_df[,i])
hist(sample_df[,i])
lines(density(sample_df[,i]))
lines(density(sample_df[,i],adjust=1.5),col=2) # Doppelte Bandbreite
title(main = col_name, ylab = NULL)
}
par(mfrow=c(2,2))
for (i in 3:ncol(sample_df[,1: ncol(sample_df)])){
col_name <- colnames(sample_df[,i])
hist(sample_df[,i])
title(main = col_name, ylab = NULL)
lines(density(sample_df[,i]))
lines(density(sample_df[,i],adjust=1.5),col=2) # Doppelte Bandbreite
}
col_name
col_name <- colnames(sample_df[,i])
col_name
par(mfrow=c(2,2))
for (i in 3:ncol(sample_df[,1: ncol(sample_df)])){
col_name <- colnames(sample_df[,i])
col_name
hist(sample_df[,i])
title(main = col_name, ylab = NULL)
lines(density(sample_df[,i]))
lines(density(sample_df[,i],adjust=1.5),col=2) # Doppelte Bandbreite
}
colnames(sample_df[,1])
colnames(sample_df)
colnames(sample_df[1,])
par(mfrow=c(2,2))
for (i in 3:ncol(sample_df[,1: ncol(sample_df)])){
col_name <- colnames(sample_df)[,i]
print(col_name)
hist(sample_df[,i])
title(main = col_name, ylab = NULL)
lines(density(sample_df[,i]))
lines(density(sample_df[,i],adjust=1.5),col=2) # Doppelte Bandbreite
}
par(mfrow=c(2,2))
for (i in 3:ncol(sample_df[,1: ncol(sample_df)])){
col_name <- colnames(sample_df)[i]
print(col_name)
hist(sample_df[,i])
title(main = col_name, ylab = NULL)
lines(density(sample_df[,i]))
lines(density(sample_df[,i],adjust=1.5),col=2) # Doppelte Bandbreite
}
par(mfrow=c(2,2))
for (i in 3:ncol(sample_df[,1: ncol(sample_df)])){
col_name <- colnames(sample_df)[i]
print(col_name)
hist(sample_df[,i])
title(main = col_name, ylab = NULL)
lines(density(sample_df[,i]))
lines(density(sample_df[,i],adjust=1.5),col=2) # Doppelte Bandbreite
}
par(mfrow=c(2,2))
par(mfrow=c(2,2))
for (i in 3:ncol(sample_df[,1: ncol(sample_df)])){
col_name <- colnames(sample_df)[i]
print(col_name)
hist(sample_df[,i])
# title(main = col_name, ylab = NULL)
lines(density(sample_df[,i]))
lines(density(sample_df[,i],adjust=1.5),col=2) # Doppelte Bandbreite
}
par(mfrow=c(2,2))
for (i in 3:ncol(sample_df[,1: ncol(sample_df)])){
col_name <- colnames(sample_df)[i]
print(col_name)
hist(sample_df[,i], title = NULL)
# title(main = col_name, ylab = NULL)
lines(density(sample_df[,i]))
lines(density(sample_df[,i],adjust=1.5),col=2) # Doppelte Bandbreite
}
par(mfrow=c(2,2))
for (i in 3:ncol(sample_df[,1: ncol(sample_df)])){
col_name <- colnames(sample_df)[i]
print(col_name)
hist(sample_df[,i], title = NULL)
# title(main = col_name, ylab = NULL)
lines(density(sample_df[,i]))
lines(density(sample_df[,i],adjust=1.5),col=2) # Doppelte Bandbreite
}
par(mfrow=c(2,2))
for (i in 3:ncol(sample_df[,1: ncol(sample_df)])){
col_name <- colnames(sample_df)[i]
print(col_name)
hist(sample_df[,i], main = NULL)
# title(main = col_name, ylab = NULL)
lines(density(sample_df[,i]))
lines(density(sample_df[,i],adjust=1.5),col=2) # Doppelte Bandbreite
}
par(mfrow=c(2,2))
for (i in 3:ncol(sample_df[,1: ncol(sample_df)])){
col_name <- colnames(sample_df)[i]
print(col_name)
hist(sample_df[,i], main = NULL)
title(main = col_name, ylab = NULL)
lines(density(sample_df[,i]))
lines(density(sample_df[,i],adjust=1.5),col=2) # Doppelte Bandbreite
}
par(mfrow=c(2,2))
for (i in 3:ncol(sample_df[,1: ncol(sample_df)])){
col_name <- colnames(sample_df)[i]
print(col_name)
hist(sample_df[,i], main = NULL, xlab = NULL)
title(main = col_name, ylab = NULL)
lines(density(sample_df[,i]))
lines(density(sample_df[,i],adjust=1.5),col=2) # Doppelte Bandbreite
}
par(mfrow=c(2,2))
for (i in 3:ncol(sample_df[,1: ncol(sample_df)])){
col_name <- colnames(sample_df)[i]
print(col_name)
hist(sample_df[,i], main = NULL, xlab = col_name)
lines(density(sample_df[,i]))
lines(density(sample_df[,i],adjust=1.5),col=2) # Doppelte Bandbreite
}
par(mfrow=c(3,3))
for (i in 3:ncol(sample_df[,1: ncol(sample_df)])){
col_name <- colnames(sample_df)[i]
print(col_name)
hist(sample_df[,i], main = NULL, xlab = col_name)
lines(density(sample_df[,i]))
lines(density(sample_df[,i],adjust=1.5),col=2) # Doppelte Bandbreite
}
for (i in 3:ncol(sample_df[,1: ncol(sample_df)])){
p1 <- ggplot(sample_df, aes(sample=sample_df[, i]))
p1 <- p1 + labs(title = colnames(sample_df)[i])
p1 <- p1 +stat_qq()+stat_qq_line()
print(p1)
}
ncol(sample_df)
head(sample_df)
, 1
head(sample_df, 1)
head(sample_df[-(1:2)])
colnames(sample_df[-(1:2)])
par(mfrow=c(ncol(sample_df)-2,3))
for (i in 3:ncol(sample_df[,1: ncol(sample_df)])){
col_name <- colnames(sample_df)[i]
print(col_name)
hist(sample_df[,i], main = NULL, xlab = col_name)
lines(density(sample_df[,i]))
lines(density(sample_df[,i],adjust=1.5),col=2) # Doppelte Bandbreite
}
par(mfrow=c(ncol(sample_df)-2,1))
for (i in 3:ncol(sample_df[,1: ncol(sample_df)])){
col_name <- colnames(sample_df)[i]
print(col_name)
hist(sample_df[,i], main = NULL, xlab = col_name)
lines(density(sample_df[,i]))
lines(density(sample_df[,i],adjust=1.5),col=2) # Doppelte Bandbreite
}
par(mfrow=c(sqrt(ncol(sample_df)-2),sqrt(ncol(sample_df)-2)))
for (i in 3:ncol(sample_df[,1: ncol(sample_df)])){
col_name <- colnames(sample_df)[i]
print(col_name)
hist(sample_df[,i], main = NULL, xlab = col_name)
lines(density(sample_df[,i]))
lines(density(sample_df[,i],adjust=1.5),col=2) # Doppelte Bandbreite
}
par(mfrow=c(sqrt(ncol(sample_df)-2)/2,sqrt(ncol(sample_df)-2/2)))
for (i in 3:ncol(sample_df[,1: ncol(sample_df)])){
col_name <- colnames(sample_df)[i]
print(col_name)
hist(sample_df[,i], main = NULL, xlab = col_name)
lines(density(sample_df[,i]))
lines(density(sample_df[,i],adjust=1.5),col=2) # Doppelte Bandbreite
}
par(mfrow=c(sqrt(ncol(sample_df)-2)/2,sqrt(ncol(sample_df)-2)/2))
for (i in 3:ncol(sample_df[,1: ncol(sample_df)])){
col_name <- colnames(sample_df)[i]
print(col_name)
hist(sample_df[,i], main = NULL, xlab = col_name)
lines(density(sample_df[,i]))
lines(density(sample_df[,i],adjust=1.5),col=2) # Doppelte Bandbreite
}
par(mfrow=c(sqrt(ncol(sample_df)-2),sqrt(ncol(sample_df)-2)))
for (i in 3:ncol(sample_df[,1: ncol(sample_df)])){
col_name <- colnames(sample_df)[i]
hist(sample_df[,i], main = NULL, xlab = col_name)
lines(density(sample_df[,i]))
lines(density(sample_df[,i],adjust=1.5),col=2) # Doppelte Bandbreite
}
par(mfrow=c(4,4)
col_name <- colnames(sample_df)[i]
par(mfrow=c(4,4))
for (i in 3:ncol(sample_df[,1: ncol(sample_df)])){
col_name <- colnames(sample_df)[i]
print(col_name)
hist(sample_df[,i], main = NULL, xlab = col_name)
lines(density(sample_df[,i]))
lines(density(sample_df[,i],adjust=1.5),col=2) # Doppelte Bandbreite
}
par(mfrow=c(3,3))
for (i in 3:ncol(sample_df[,1: ncol(sample_df)])){
col_name <- colnames(sample_df)[i]
print(col_name)
hist(sample_df[,i], main = NULL, xlab = col_name)
lines(density(sample_df[,i]))
lines(density(sample_df[,i],adjust=1.5),col=2) # Doppelte Bandbreite
}
par(mfrow=c(3,2))
for (i in 3:ncol(sample_df[,1: ncol(sample_df)])){
col_name <- colnames(sample_df)[i]
print(col_name)
hist(sample_df[,i], main = NULL, xlab = col_name)
lines(density(sample_df[,i]))
lines(density(sample_df[,i],adjust=1.5),col=2) # Doppelte Bandbreite
}
par(mfrow=c(2,3))
for (i in 3:ncol(sample_df[,1: ncol(sample_df)])){
col_name <- colnames(sample_df)[i]
print(col_name)
hist(sample_df[,i], main = NULL, xlab = col_name)
lines(density(sample_df[,i]))
lines(density(sample_df[,i],adjust=1.5),col=2) # Doppelte Bandbreite
}
View(test_data)
par(mfrow=c(3,3))
for (i in 3:ncol(sample_df[,1: ncol(sample_df)])){
col_name <- colnames(sample_df)[i]
hist(sample_df[,i], main = col_name, xlab = NULL, cex.main = 0.5)
lines(density(sample_df[,i]))
lines(density(sample_df[,i],adjust=1.5),col=2) # Doppelte Bandbreite
}
par(mfrow=c(3,3))
for (i in 3:ncol(sample_df[,1: ncol(sample_df)])){
col_name <- colnames(sample_df)[i]
hist(sample_df[,i], main = col_name, xlab = NULL, cex.main = 1)
lines(density(sample_df[,i]))
lines(density(sample_df[,i],adjust=1.5),col=2) # Doppelte Bandbreite
}
par(mfrow=c(3,3))
for (i in 3:ncol(sample_df[,1: ncol(sample_df)])){
col_name <- colnames(sample_df)[i]
hist(sample_df[,i], main = col_name, xlab = NULL, cex.main = 0.8)
lines(density(sample_df[,i]))
lines(density(sample_df[,i],adjust=1.5),col=2) # Doppelte Bandbreite
}
par(mfrow=c(3,3))
for (i in 3:ncol(sample_df[,1: ncol(sample_df)])){
col_name <- colnames(sample_df)[i]
qqnorm(sample_df[,i], main = col_name) # qq-plot auf Normalverteilung
qqline(sample_df[,i]) # linie der erwarteten werte wenn qq normalverteilt wäre
}
par(mfrow=c(3,3))
for (i in 3:ncol(sample_df[,1: ncol(sample_df)])){
col_name <- colnames(sample_df)[i]
qqnorm(sample_df[,i], main = col_name, cex.main = 0.8) # qq-plot auf Normalverteilung
qqline(sample_df[,i]) # linie der erwarteten werte wenn qq normalverteilt wäre
}
par(mfrow=c(3,3))
for (i in 3:ncol(sample_df[,1: ncol(sample_df)])){
col_name <- colnames(sample_df)[i]
hist(sample_df[,i], main = col_name, xlab = "intensity", cex.main = 0.8)
lines(density(sample_df[,i]))
lines(density(sample_df[,i],adjust=1.5),col=2) # Doppelte Bandbreite
}
par(mfrow=c(3,3))
for (i in 3:ncol(sample_df[,1: ncol(sample_df)])){
col_name <- colnames(sample_df)[i]
hist(sample_df[,i], main = col_name, xlab = "intensity", cex.main = 0.8)
lines(density(sample_df[,i]))
lines(density(sample_df[,i],adjust=2),col=2) # Doppelte Bandbreite
}
par(mfrow=c(3,3))
for (i in 3:ncol(sample_df[,1: ncol(sample_df)])){
col_name <- colnames(sample_df)[i]
hist(sample_df[,i], main = col_name, xlab = "intensity", cex.main = 0.8)
lines(density(sample_df[,i]))
lines(density(sample_df[,i],adjust=0.5),col=2) # Doppelte Bandbreite
}
par(mfrow=c(3,3))
for (i in 3:ncol(sample_df[,1: ncol(sample_df)])){
col_name <- colnames(sample_df)[i]
qqnorm(sample_df[,i], main = col_name, cex.main = 0.8) # qq-plot
qqline(sample_df[,i]) # expected values from qq if data was ND
}
par(mfrow=c(3,3))
for (i in 3:ncol(sample_df[,1: ncol(sample_df)])){
col_name <- colnames(sample_df)[i]
hist(sample_df[,i], main = col_name, xlab = "intensity", cex.main = 0.8)
lines(density(sample_df[,i]))
lines(density(sample_df[,i],adjust=1.5),col=2) # 1.5 x bandwidth
}
dev.off()
out_name <- "test_data"
jpeg(paste(c(out_name, "histogram", ".jpg")))
par(mfrow=c(3,3))
for (i in 3:ncol(sample_df[,1: ncol(sample_df)])){
col_name <- colnames(sample_df)[i]
hist(sample_df[,i], main = col_name, xlab = "intensity", cex.main = 0.8)
lines(density(sample_df[,i]))
lines(density(sample_df[,i],adjust=1.5),col=2) # 1.5 x bandwidth
}
dev.off()
getwd()
pdf(paste(c(out_name, "histogram", ".jpg")))
par(mfrow=c(3,3))
for (i in 3:ncol(sample_df[,1: ncol(sample_df)])){
col_name <- colnames(sample_df)[i]
hist(sample_df[,i], main = col_name, xlab = "intensity", cex.main = 0.8)
lines(density(sample_df[,i]))
lines(density(sample_df[,i],adjust=1.5),col=2) # 1.5 x bandwidth
}
dev.off()
pdf(paste(c(out_name, "histogram", ".jpg"), sep = "_"))
par(mfrow=c(3,3))
for (i in 3:ncol(sample_df[,1: ncol(sample_df)])){
col_name <- colnames(sample_df)[i]
hist(sample_df[,i], main = col_name, xlab = "intensity", cex.main = 0.8)
lines(density(sample_df[,i]))
lines(density(sample_df[,i],adjust=1.5),col=2) # 1.5 x bandwidth
}
dev.off()
p <- paste(c(out_name, "_histogram", ".pdf"))
p
p <- paste(out_name, "_histogram", ".pdf")
p
p <- paste(out_name, "_histogram", ".pdf", collapse = NULL)
p
p <- paste(out_name, "_histogram", ".pdf", collapse = "NULL"")
pdf()
par(mfrow=c(3,3))
for (i in 3:ncol(sample_df[,1: ncol(sample_df)])){
col_name <- colnames(sample_df)[i]
hist(sample_df[,i], main = col_name, xlab = "intensity", cex.main = 0.8)
lines(density(sample_df[,i]))
lines(density(sample_df[,i],adjust=1.5),col=2) # 1.5 x bandwidth
}
dev.off()
## test for normal distribution
### Don't use with multi modal data --> check histogram and qq plots first
p <- paste(out_name, "_histogram", ".pdf", collapse = "")
p
p <- paste(out_name, "_histogram", ".pdf", sep = "")
p
pdf(paste(out_name, "_histogram", ".pdf", sep = ""))
par(mfrow=c(3,3))
for (i in 3:ncol(sample_df[,1: ncol(sample_df)])){
col_name <- colnames(sample_df)[i]
hist(sample_df[,i], main = col_name, xlab = "intensity", cex.main = 0.8)
lines(density(sample_df[,i]))
lines(density(sample_df[,i],adjust=1.5),col=2) # 1.5 x bandwidth
}
dev.off()
pdf(paste(out_name, "_qqplot", ".pdf", sep = ""))
par(mfrow=c(3,3))
for (i in 3:ncol(sample_df[,1: ncol(sample_df)])){
col_name <- colnames(sample_df)[i]
qqnorm(sample_df[,i], main = col_name, cex.main = 0.8) # qq-plot
qqline(sample_df[,i]) # expected values from qq if data was ND
}
# pdf(paste(out_name, "_histogram", ".pdf", sep = ""))
par(mfrow=c(3,3))
for (i in 3:ncol(sample_df[,1: ncol(sample_df)])){
col_name <- colnames(sample_df)[i]
hist(sample_df[,i], main = col_name, xlab = "intensity", cex.main = 0.8)
lines(density(sample_df[,i]))
lines(density(sample_df[,i],adjust=1.5),col=2) # 1.5 x bandwidth
}
dev.off()
graph_path <- "/home/lisa/FH/Masterarbeit/LipidomeComparison/plots/test_data"
pdf(paste(graph_path, "_qqplot", ".pdf", sep = ""))
pdf(paste(graph_path, "_qqplot", ".pdf", sep = ""))
par(mfrow=c(3,3))
for (i in 3:ncol(sample_df[,1: ncol(sample_df)])){
col_name <- colnames(sample_df)[i]
qqnorm(sample_df[,i], main = col_name, cex.main = 0.8) # qq-plot
qqline(sample_df[,i]) # expected values from qq if data was ND
}
dev.off()
# set variables
if (! file.exists(subDir)){
print("HI")
} else {
print("Nope")
}
# set variables
if (! file.exists("/home/lisa/FH/Masterarbeit/LipidomeComparison/plots/")){
print("HI")
} else {
print("Nope")
}
# set variables
if (! file.exists("plots")){
print("HI")
} else {
print("Nope")
}
# set variables
if (! file.exists("data")){
print("HI")
} else {
print("Nope")
}
# set variables
if (! file.exists("graph_path")){
print("HI")
} else {
print("Nope")
}
# set variables
if (! file.exists(graph_path)){
print("HI")
} else {
print("Nope")
}
getwd()
working_directory <- "/home/lisa/FH/Masterarbeit/LipidomeComparison/"
setwd(working_directory)
getwd()
if (! file.exists(paste(working_directory, "/path")){
if (! file.exists(paste(working_directory, "/path")){
p <- paste(working_directory, "/path")
p
p <- paste(working_directory, "path", sep = "")
p
# set variables
working_directory <- "/home/lisa/FH/Masterarbeit/LipidomeComparison"
setwd(working_directory)
getwd()
input_path <- "/home/lisa/FH/Masterarbeit/LipidomeComparison/data/Probe-Datensatz_lisa.csv"
test_path <- "/home/lisa/FH/Masterarbeit/LipidomeComparison/data/prefix_data.csv"
plot_path <- paste(working_directory, "/plots", sep = "")
if (! file.exists(plot_path){
plot_name <- paste(plot_path, "/test_data")
if (! file.exists(plot_path)){
print("HI")
} else {
print("Nope")
}
