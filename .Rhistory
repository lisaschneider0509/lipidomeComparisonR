#'              foldchange = 1, significance = 0.01,
#'              out_path = dir)}
volcano_plot <- function(volcano_df,
foldchange_col, significance_col,
significance = 0.05,
foldchange, #todo = 0.05
title = "Volcano plot",
x_lab = "log2Fold", y_lab = "-log10(p-value)",
labels = data.frame(),
out_path = "none"){
print(nrow(labels))
is_significant <- significance_col < significance
threshold <- vector()
for(i in 1:length(is_significant)){
if(is_significant[i] == TRUE && foldchange_col[i] < -1*foldchange){
buffer <- "down"
}
else if(is_significant[i] == TRUE && foldchange_col[i] > foldchange){
buffer <- "up"
}
else{
buffer <- "not_sig"
}
threshold <- c(threshold, buffer)
}
volcano_df <- cbind(volcano_df, threshold)
limits <- max(-1*min(foldchange_col), max(foldchange_col))
mycolors <- viridis(n = 2, begin = 0, end = 0.9)
volcano <- ggplot(data = volcano_df,
aes(x = foldchange_col, y = -1*log10(significance_col))) +
geom_point(aes(color = as.factor(threshold)), shape = 20) +
geom_hline(yintercept = -1*log10(significance),
linetype = "dashed",
colour = "grey40") +
geom_vline(xintercept = -1*foldchange,
linetype = "dashed",
colour = "grey40") +
geom_vline(xintercept = foldchange,
linetype = "dashed",
colour = "grey40") +
labs(title = title) +
xlab(x_lab) + ylab(y_lab) +
scale_x_continuous(limits = c(-1*limits, limits)) +
scale_color_manual(name = "Threshold",
values = c("up" = mycolors[1], "down" = mycolors[2], "not_sig" = "grey"),
labels = c("Down-regulated", "Not significant FC", "Up-regulated")) +
theme(legend.position = "right")
if (!is.null(nrow(labels))){
print("test")
volcano <- volcano + geom_text(aes(label=ifelse(threshold != "not_sig", as.character(labels),'')),
hjust=0, vjust=0,
size = 3)
}
if(out_path != "none"){
print(paste("Saving plot to ", out_path, "_volcano.png", sep = ""))
ggsave(paste(out_path, "_volcano.png", sep = ""),
plot = volcano)
}
volcano
}
# p_vals <- ttest_by_column(working_data, working_data$treatment)
# adj_p_vals <- p.adjust(p_vals$p_values, method = "fdr")
# log2FC <- log2_foldchange(working_data, working_data$treatment)
# myvolcano_df <- cbind(p_vals, adj_p_vals, log2FC)
# myvolcano_df$log2_foldchange[3] <- 0.1
volcano_plot(myvolcano_df,
significance_col = myvolcano_df$p_values,
foldchange_col = myvolcano_df$log2_foldchange,
foldchange = 0.05,
labels = 1:nrow(myvolcano_df))
#'              foldchange_col = volcano_test$fold_changes,
#'              significance_col = volcano_test$pvalues, foldchange = 1)
#' \dontrun
#' {dir.create(paste(getwd(), "/examples", sep = ""), showWarnings = FALSE)
#' dir <- paste(getwd(), "/examples/vp", sep = "")
#' volcano_plot(volcano_test,
#'              foldchange_col = volcano_test$fold_changes,
#'              significance_col = volcano_test$pvalues,
#'              foldchange = 1, significance = 0.01,
#'              out_path = dir)}
volcano_plot <- function(volcano_df,
foldchange_col, significance_col,
significance = 0.05,
foldchange, #todo = 0.05
title = "Volcano plot",
x_lab = "log2Fold", y_lab = "-log10(p-value)",
labels = data.frame(),
out_path = "none"){
print(length(labels))
is_significant <- significance_col < significance
threshold <- vector()
for(i in 1:length(is_significant)){
if(is_significant[i] == TRUE && foldchange_col[i] < -1*foldchange){
buffer <- "down"
}
else if(is_significant[i] == TRUE && foldchange_col[i] > foldchange){
buffer <- "up"
}
else{
buffer <- "not_sig"
}
threshold <- c(threshold, buffer)
}
volcano_df <- cbind(volcano_df, threshold)
limits <- max(-1*min(foldchange_col), max(foldchange_col))
mycolors <- viridis(n = 2, begin = 0, end = 0.9)
volcano <- ggplot(data = volcano_df,
aes(x = foldchange_col, y = -1*log10(significance_col))) +
geom_point(aes(color = as.factor(threshold)), shape = 20) +
geom_hline(yintercept = -1*log10(significance),
linetype = "dashed",
colour = "grey40") +
geom_vline(xintercept = -1*foldchange,
linetype = "dashed",
colour = "grey40") +
geom_vline(xintercept = foldchange,
linetype = "dashed",
colour = "grey40") +
labs(title = title) +
xlab(x_lab) + ylab(y_lab) +
scale_x_continuous(limits = c(-1*limits, limits)) +
scale_color_manual(name = "Threshold",
values = c("up" = mycolors[1], "down" = mycolors[2], "not_sig" = "grey"),
labels = c("Down-regulated", "Not significant FC", "Up-regulated")) +
theme(legend.position = "right")
if (!is.null(nrow(labels))){
print("test")
volcano <- volcano + geom_text(aes(label=ifelse(threshold != "not_sig", as.character(labels),'')),
hjust=0, vjust=0,
size = 3)
}
if(out_path != "none"){
print(paste("Saving plot to ", out_path, "_volcano.png", sep = ""))
ggsave(paste(out_path, "_volcano.png", sep = ""),
plot = volcano)
}
volcano
}
# p_vals <- ttest_by_column(working_data, working_data$treatment)
# adj_p_vals <- p.adjust(p_vals$p_values, method = "fdr")
# log2FC <- log2_foldchange(working_data, working_data$treatment)
# myvolcano_df <- cbind(p_vals, adj_p_vals, log2FC)
# myvolcano_df$log2_foldchange[3] <- 0.1
volcano_plot(myvolcano_df,
significance_col = myvolcano_df$p_values,
foldchange_col = myvolcano_df$log2_foldchange,
foldchange = 0.05,
labels = 1:nrow(myvolcano_df))
#'              foldchange_col = volcano_test$fold_changes,
#'              significance_col = volcano_test$pvalues, foldchange = 1)
#' \dontrun
#' {dir.create(paste(getwd(), "/examples", sep = ""), showWarnings = FALSE)
#' dir <- paste(getwd(), "/examples/vp", sep = "")
#' volcano_plot(volcano_test,
#'              foldchange_col = volcano_test$fold_changes,
#'              significance_col = volcano_test$pvalues,
#'              foldchange = 1, significance = 0.01,
#'              out_path = dir)}
volcano_plot <- function(volcano_df,
foldchange_col, significance_col,
significance = 0.05,
foldchange, #todo = 0.05
title = "Volcano plot",
x_lab = "log2Fold", y_lab = "-log10(p-value)",
labels = data.frame(),
out_path = "none"){
print(length(labels))
is_significant <- significance_col < significance
threshold <- vector()
for(i in 1:length(is_significant)){
if(is_significant[i] == TRUE && foldchange_col[i] < -1*foldchange){
buffer <- "down"
}
else if(is_significant[i] == TRUE && foldchange_col[i] > foldchange){
buffer <- "up"
}
else{
buffer <- "not_sig"
}
threshold <- c(threshold, buffer)
}
volcano_df <- cbind(volcano_df, threshold)
limits <- max(-1*min(foldchange_col), max(foldchange_col))
mycolors <- viridis(n = 2, begin = 0, end = 0.9)
volcano <- ggplot(data = volcano_df,
aes(x = foldchange_col, y = -1*log10(significance_col))) +
geom_point(aes(color = as.factor(threshold)), shape = 20) +
geom_hline(yintercept = -1*log10(significance),
linetype = "dashed",
colour = "grey40") +
geom_vline(xintercept = -1*foldchange,
linetype = "dashed",
colour = "grey40") +
geom_vline(xintercept = foldchange,
linetype = "dashed",
colour = "grey40") +
labs(title = title) +
xlab(x_lab) + ylab(y_lab) +
scale_x_continuous(limits = c(-1*limits, limits)) +
scale_color_manual(name = "Threshold",
values = c("up" = mycolors[1], "down" = mycolors[2], "not_sig" = "grey"),
labels = c("Down-regulated", "Not significant FC", "Up-regulated")) +
theme(legend.position = "right")
if (!is.null(length(labels))){
print("test")
volcano <- volcano + geom_text(aes(label=ifelse(threshold != "not_sig", as.character(labels),'')),
hjust=0, vjust=0,
size = 3)
}
if(out_path != "none"){
print(paste("Saving plot to ", out_path, "_volcano.png", sep = ""))
ggsave(paste(out_path, "_volcano.png", sep = ""),
plot = volcano)
}
volcano
}
# p_vals <- ttest_by_column(working_data, working_data$treatment)
# adj_p_vals <- p.adjust(p_vals$p_values, method = "fdr")
# log2FC <- log2_foldchange(working_data, working_data$treatment)
# myvolcano_df <- cbind(p_vals, adj_p_vals, log2FC)
# myvolcano_df$log2_foldchange[3] <- 0.1
volcano_plot(myvolcano_df,
significance_col = myvolcano_df$p_values,
foldchange_col = myvolcano_df$log2_foldchange,
foldchange = 0.05,
labels = 1:nrow(myvolcano_df))
# p_vals <- ttest_by_column(working_data, working_data$treatment)
# adj_p_vals <- p.adjust(p_vals$p_values, method = "fdr")
# log2FC <- log2_foldchange(working_data, working_data$treatment)
# myvolcano_df <- cbind(p_vals, adj_p_vals, log2FC)
# myvolcano_df$log2_foldchange[3] <- 0.1
volcano_plot(myvolcano_df,
significance_col = myvolcano_df$p_values,
foldchange_col = myvolcano_df$log2_foldchange,
foldchange = 0.05,
# labels = 1:nrow(myvolcano_df)
)
#'              foldchange_col = volcano_test$fold_changes,
#'              significance_col = volcano_test$pvalues, foldchange = 1)
#' \dontrun
#' {dir.create(paste(getwd(), "/examples", sep = ""), showWarnings = FALSE)
#' dir <- paste(getwd(), "/examples/vp", sep = "")
#' volcano_plot(volcano_test,
#'              foldchange_col = volcano_test$fold_changes,
#'              significance_col = volcano_test$pvalues,
#'              foldchange = 1, significance = 0.01,
#'              out_path = dir)}
volcano_plot <- function(volcano_df,
foldchange_col, significance_col,
significance = 0.05,
foldchange, #todo = 0.05
title = "Volcano plot",
x_lab = "log2Fold", y_lab = "-log10(p-value)",
labels = data.frame(),
out_path = "none"){
print(length(labels))
is_significant <- significance_col < significance
threshold <- vector()
for(i in 1:length(is_significant)){
if(is_significant[i] == TRUE && foldchange_col[i] < -1*foldchange){
buffer <- "down"
}
else if(is_significant[i] == TRUE && foldchange_col[i] > foldchange){
buffer <- "up"
}
else{
buffer <- "not_sig"
}
threshold <- c(threshold, buffer)
}
volcano_df <- cbind(volcano_df, threshold)
limits <- max(-1*min(foldchange_col), max(foldchange_col))
mycolors <- viridis(n = 2, begin = 0, end = 0.9)
volcano <- ggplot(data = volcano_df,
aes(x = foldchange_col, y = -1*log10(significance_col))) +
geom_point(aes(color = as.factor(threshold)), shape = 20) +
geom_hline(yintercept = -1*log10(significance),
linetype = "dashed",
colour = "grey40") +
geom_vline(xintercept = -1*foldchange,
linetype = "dashed",
colour = "grey40") +
geom_vline(xintercept = foldchange,
linetype = "dashed",
colour = "grey40") +
labs(title = title) +
xlab(x_lab) + ylab(y_lab) +
scale_x_continuous(limits = c(-1*limits, limits)) +
scale_color_manual(name = "Threshold",
values = c("up" = mycolors[1], "down" = mycolors[2], "not_sig" = "grey"),
labels = c("Down-regulated", "Not significant FC", "Up-regulated")) +
theme(legend.position = "right")
if (length(labels) != 0){
volcano <- volcano + geom_text(aes(label=ifelse(threshold != "not_sig", as.character(labels),'')),
hjust=0, vjust=0,
size = 3)
}
if(out_path != "none"){
print(paste("Saving plot to ", out_path, "_volcano.png", sep = ""))
ggsave(paste(out_path, "_volcano.png", sep = ""),
plot = volcano)
}
volcano
}
# p_vals <- ttest_by_column(working_data, working_data$treatment)
# adj_p_vals <- p.adjust(p_vals$p_values, method = "fdr")
# log2FC <- log2_foldchange(working_data, working_data$treatment)
# myvolcano_df <- cbind(p_vals, adj_p_vals, log2FC)
# myvolcano_df$log2_foldchange[3] <- 0.1
volcano_plot(myvolcano_df,
significance_col = myvolcano_df$p_values,
foldchange_col = myvolcano_df$log2_foldchange,
foldchange = 0.05,
# labels = 1:nrow(myvolcano_df)
)
## graphs
# install.packages("ggplot2")
# install.packages("scales")
# install.packages("viridis")
install.packages("ggrepel")
library(ggrepel)
#'              foldchange_col = volcano_test$fold_changes,
#'              significance_col = volcano_test$pvalues, foldchange = 1)
#' \dontrun
#' {dir.create(paste(getwd(), "/examples", sep = ""), showWarnings = FALSE)
#' dir <- paste(getwd(), "/examples/vp", sep = "")
#' volcano_plot(volcano_test,
#'              foldchange_col = volcano_test$fold_changes,
#'              significance_col = volcano_test$pvalues,
#'              foldchange = 1, significance = 0.01,
#'              out_path = dir)}
volcano_plot <- function(volcano_df,
foldchange_col, significance_col,
significance = 0.05,
foldchange, #todo = 0.05
title = "Volcano plot",
x_lab = "log2Fold", y_lab = "-log10(p-value)",
labels = data.frame(),
out_path = "none"){
is_significant <- significance_col < significance
threshold <- vector()
for(i in 1:length(is_significant)){
if(is_significant[i] == TRUE && foldchange_col[i] < -1*foldchange){
buffer <- "down"
}
else if(is_significant[i] == TRUE && foldchange_col[i] > foldchange){
buffer <- "up"
}
else{
buffer <- "not_sig"
}
threshold <- c(threshold, buffer)
}
volcano_df <- cbind(volcano_df, threshold)
limits <- max(-1*min(foldchange_col), max(foldchange_col))
mycolors <- viridis(n = 2, begin = 0, end = 0.9)
volcano <- ggplot(data = volcano_df,
aes(x = foldchange_col, y = -1*log10(significance_col))) +
geom_point(aes(color = as.factor(threshold)), shape = 20) +
geom_hline(yintercept = -1*log10(significance),
linetype = "dashed",
colour = "grey40") +
geom_vline(xintercept = -1*foldchange,
linetype = "dashed",
colour = "grey40") +
geom_vline(xintercept = foldchange,
linetype = "dashed",
colour = "grey40") +
labs(title = title) +
xlab(x_lab) + ylab(y_lab) +
scale_x_continuous(limits = c(-1*limits, limits)) +
scale_color_manual(name = "Threshold",
values = c("up" = mycolors[1], "down" = mycolors[2], "not_sig" = "grey"),
labels = c("Down-regulated", "Not significant FC", "Up-regulated")) +
theme(legend.position = "right")
if (length(labels) != 0){
volcano <- volcano + geom_text_repel(aes(label=ifelse(threshold != "not_sig", as.character(labels),'')),
hjust=0, vjust=0,
size = 3)
}
if(out_path != "none"){
print(paste("Saving plot to ", out_path, "_volcano.png", sep = ""))
ggsave(paste(out_path, "_volcano.png", sep = ""),
plot = volcano)
}
volcano
}
# p_vals <- ttest_by_column(working_data, working_data$treatment)
# adj_p_vals <- p.adjust(p_vals$p_values, method = "fdr")
# log2FC <- log2_foldchange(working_data, working_data$treatment)
# myvolcano_df <- cbind(p_vals, adj_p_vals, log2FC)
# myvolcano_df$log2_foldchange[3] <- 0.1
volcano_plot(myvolcano_df,
significance_col = myvolcano_df$p_values,
foldchange_col = myvolcano_df$log2_foldchange,
foldchange = 0.05,
labels = 1:nrow(myvolcano_df))
volcano_plot(volcano_test,
foldchange_col = volcano_test$fold_changes,
significance_col = volcano_test$pvalues,
foldchange = 1,
labels = 1:nrow(volcano_test))
\dontrun
volcano_plot(volcano_test,
set.seed(100)
fold_changes <- c(rnorm(2000, 0, 2))
pvalues <- runif(n=2000, min=1e-50, max=.1)
set.seed(100)
fold_changes <- c(rnorm(2000, 0, 2))
pvalues <- runif(n=2000, min=1e-50, max=.1)
volcano_test <- as.data.frame(cbind(fold_changes, pvalues))
volcano_plot(volcano_test,
foldchange_col = volcano_test$fold_changes,
significance_col = volcano_test$pvalues, foldchange = 1)
volcano_plot(volcano_test,
foldchange_col = volcano_test$fold_changes,
significance_col = volcano_test$pvalues,
foldchange = 1,
labels = 1:nrow(volcano_test))
volcano_plot(volcano_test,
foldchange_col = volcano_test$fold_changes,
significance_col = volcano_test$pvalues,
foldchange = 1)
stop()
volcano_plot(volcano_test,
foldchange_col = volcano_test$fold_changes,
significance_col = volcano_test$pvalues, foldchange = 1)
volcano_plot(volcano_test,
foldchange_col = volcano_test$fold_changes,
significance_col = volcano_test$pvalues,
foldchange = 1)
#'              foldchange = 1,
#'              labels =c(1:ncol(volcano_test)))
#' \dontrun
#' {dir.create(paste(getwd(), "/examples", sep = ""), showWarnings = FALSE)
#' dir <- paste(getwd(), "/examples/vp", sep = "")
#' volcano_plot(volcano_test,
#'              foldchange_col = volcano_test$fold_changes,
#'              significance_col = volcano_test$pvalues,
#'              foldchange = 1, significance = 0.01,
#'              out_path = dir)}
volcano_plot <- function(volcano_df,
foldchange_col, significance_col,
significance = 0.05,
foldchange, #todo = 0.05
title = "Volcano plot",
x_lab = "log2Fold", y_lab = "-log10(p-value)",
labels = vector(),
out_path = "none"){
is_significant <- significance_col < significance
threshold <- vector()
for(i in 1:length(is_significant)){
if(is_significant[i] == TRUE && foldchange_col[i] < -1*foldchange){
buffer <- "down"
}
else if(is_significant[i] == TRUE && foldchange_col[i] > foldchange){
buffer <- "up"
}
else{
buffer <- "not_sig"
}
threshold <- c(threshold, buffer)
}
volcano_df <- cbind(volcano_df, threshold)
limits <- max(-1*min(foldchange_col), max(foldchange_col))
mycolors <- viridis(n = 2, begin = 0, end = 0.9)
volcano <- ggplot(data = volcano_df,
aes(x = foldchange_col, y = -1*log10(significance_col))) +
geom_point(aes(color = as.factor(threshold)), shape = 20) +
geom_hline(yintercept = -1*log10(significance),
linetype = "dashed",
colour = "grey40") +
geom_vline(xintercept = -1*foldchange,
linetype = "dashed",
colour = "grey40") +
geom_vline(xintercept = foldchange,
linetype = "dashed",
colour = "grey40") +
labs(title = title) +
xlab(x_lab) + ylab(y_lab) +
scale_x_continuous(limits = c(-1*limits, limits)) +
scale_color_manual(name = "Threshold",
values = c("up" = mycolors[1], "down" = mycolors[2], "not_sig" = "grey"),
labels = c("Down-regulated", "Not significant FC", "Up-regulated")) +
theme(legend.position = "right")
if (length(labels) != 0){
volcano <- volcano + geom_text_repel(aes(label=ifelse(threshold != "not_sig", as.character(labels),'')),
hjust=0, vjust=0,
size = 3)
}
if(out_path != "none"){
print(paste("Saving plot to ", out_path, "_volcano.png", sep = ""))
ggsave(paste(out_path, "_volcano.png", sep = ""),
plot = volcano)
}
volcano
}
# p_vals <- ttest_by_column(working_data, working_data$treatment)
# adj_p_vals <- p.adjust(p_vals$p_values, method = "fdr")
# log2FC <- log2_foldchange(working_data, working_data$treatment)
# myvolcano_df <- cbind(p_vals, adj_p_vals, log2FC)
# myvolcano_df$log2_foldchange[3] <- 0.1
volcano_plot(myvolcano_df,
significance_col = myvolcano_df$p_values,
foldchange_col = myvolcano_df$log2_foldchange,
foldchange = 0.05,
labels = 1:nrow(myvolcano_df))
volcano_plot(volcano_test,
foldchange_col = volcano_test$fold_changes,
significance_col = volcano_test$pvalues,
foldchange = 1,
labels =c(1:ncol(volcano_test)))
