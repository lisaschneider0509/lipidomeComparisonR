p1 <- ggplot(means_tech, aes(sample=means_tech[, 2]))+stat_qq()+stat_qq_line()+labs(title = colnames(means_tech)[2])
p1 <- ggplot(means_tech, aes(sample=means_tech[, 3]))+stat_qq()+stat_qq_line()+labs(title = colnames(means_tech)[3])
p2
p1 <- ggplot(means_tech, aes(sample=means_tech[, 2]))+stat_qq()+stat_qq_line()+labs(title = colnames(means_tech)[2])
p2 <- ggplot(means_tech, aes(sample=means_tech[, 3]))+stat_qq()+stat_qq_line()+labs(title = colnames(means_tech)[3])
p2
do.call(grid.arrange, c(p1, p2))
grid.arrange(p1, p2, ncol=2)
grid.arrange(c(p1, p2), ncol=2)
typeof
typeof(plotlist)
grid.arrange(list(p1, p2), ncol=2)
grid.arrange(grobs=list(p1, p2), ncol=2)
grid.arrange(grobs=list(plotlist), ncol=2)
plotlist[1]
plotlist[2]
plotlist <- list()
for (i in 2:ncol(means_tech[,2: ncol(means_tech)])){
p1 <- ggplot(means_tech, aes(sample=means_tech[, i]))+stat_qq()+stat_qq_line()+labs(title = colnames(means_tech)[i])
plotlist[[i]] <- p1
}
plotlist[1]
plotlist[2]
plotlist <- list()
for (i in 2:ncol(means_tech[,1: ncol(means_tech)])){
p1 <- ggplot(means_tech, aes(sample=means_tech[, i]))+stat_qq()+stat_qq_line()+labs(title = colnames(means_tech)[i])
plotlist[[i]] <- p1
}
grid.arrange(plotlist[2:], ncol=2)
grid.arrange(plotlist[2:-1], ncol=2)
plotlist[2:length(colnames(means_tech))]
grid.arrange(plotlist[2:length(colnames(means_tech))], ncol=2)
grid.arrange(plotlist[2:3], ncol=2)
grid.arrange(plotlist[1], ncol=2)
grid.arrange(plotlist[2], ncol=2)
p2 <- plotlist[2]
grid.arrange(p2, ncol=2)
grid.arrange(grobs=list(plotlist[2:3]), ncol=2)
p2 <- plotlist[2]
p2
grid.arrange(p2, ncol=1)
grid.arrange(p1, ncol=1)
plotlist <- list()
for (i in 2:ncol(means_tech[,1: ncol(means_tech)])){
p1 <- ggplot(means_tech, aes(sample=means_tech[, i]))+stat_qq()+stat_qq_line()+labs(title = colnames(means_tech)[i])
plotlist[i] <- p1
}
plotlist <- list()
for (i in 2:ncol(means_tech[,1: ncol(means_tech)])){
p1 <- ggplot(means_tech, aes(sample=means_tech[, i]))+stat_qq()+stat_qq_line()+labs(title = colnames(means_tech)[i])
plotlist[[i]] <- p1
}
do.call("grid.arrange", c(p1, ncol=nCol))
do.call("grid.arrange", c(p1, ncol=2))
do.call("grid.arrange", c(p1, ncol=1))
df <- data.frame(x=1:10, y=rnorm(10))
p1 <- ggplot(df, aes(x,y)) + geom_point()
plist <- list(p1,p1,p1,p1,p1)
n <- length(plist)
nCol <- floor(sqrt(n))
do.call("grid.arrange", c(plist, ncol=nCol))
p1 <- ggplot(means_tech, aes(sample=means_tech[, 2]))+stat_qq()+stat_qq_line()+labs(title = colnames(means_tech)[2])
library(gridExtra)
library(ggplot2)
theme_set(
theme_minimal() +
theme(legend.position = "top")
)
# set variables
input_path <- "/home/lisa/FH/Masterarbeit/LipidomeComparison/data/Probe-Datensatz_lisa.csv"
test_path <- "/home/lisa/FH/Masterarbeit/LipidomeComparison/data/test.csv"
# load data
lipid_data <- read.csv(input_path, header = TRUE, sep = ",", dec = ".", row.names = 1) #read data
lipid_data <- t(lipid_data)
test_data <- read.csv(test_path, header = TRUE, sep = ",", dec = ".", row.names = 1) #read data
test_data <- as.data.frame(t(test_data))
working_data <- test_data
# summary biological & technical replicates
sample_ID <- list(substr(row.names(working_data), 1, 3)) # letter 1-3 identify the sample
biol_replicate <- list(substr(row.names(working_data), 1, 5)) # letter 1-5 identify the biological replicates
means_biol <- as.data.frame(aggregate(working_data, by=sample_ID, FUN=mean)) # grouping by sample-ID calculates the mean over all biological replicates
means_tech <- as.data.frame(aggregate(working_data, by=biol_replicate, FUN=mean)) # grouping by biological replicate calculates the mean over all technical replicates
p1 <- ggplot(means_tech, aes(sample=means_tech[, 2]))+stat_qq()+stat_qq_line()+labs(title = colnames(means_tech)[2])
typeof(p1)
plotlist <- list()
for (i in 2:ncol(means_tech[,1: ncol(means_tech)])){
p1 <- ggplot(means_tech, aes(sample=means_tech[, i]))+stat_qq()+stat_qq_line()+labs(title = colnames(means_tech)[i])
append(plotlist, p1)
}
plotlist
for (i in 2:ncol(means_tech[,1: ncol(means_tech)])){
p1 <- ggplot(means_tech, aes(sample=means_tech[, i]))+stat_qq()+stat_qq_line()+labs(title = colnames(means_tech)[i])
append(plotlist, p1)
}
plotlist
p2 <- append(p2, p1)
p2 <- list()
p2 <- append(p2, p1)
p2
do.call("grid.arrange", c(p2, ncol=nCol))
grid.arrange(p2, ncol=1)
grid.arrange(p1, ncol=1)
typeof(p1)
typeof(p2)
install.packages("cowplot")
library(cowplot)
plist <- list()
for (i in 2:ncol(means_tech[,1: ncol(means_tech)])){
p1 <- ggplot(means_tech, aes(sample=means_tech[, i]))+stat_qq()+stat_qq_line()+labs(title = colnames(means_tech)[i])
#plotlist[[i]] <- p1
}
plot_grid(plist)
arrangeGrob(grobs = plist)
plist
plist <- list()
for (i in 2:ncol(means_tech[,1: ncol(means_tech)])){
p1 <- ggplot(means_tech, aes(sample=means_tech[, i]))+stat_qq()+stat_qq_line()+labs(title = colnames(means_tech)[i])
#plotlist[[i]] <- p1
}
plist
plist <- list()
for (i in 2:ncol(means_tech[,1: ncol(means_tech)])){
p1 <- ggplot(means_tech, aes(sample=means_tech[, i]))+stat_qq()+stat_qq_line()+labs(title = colnames(means_tech)[i])
plotlist[[i]] <- p1
}
arrangeGrob(grobs = plist)
plist
# set variables
input_path <- "/home/lisa/FH/Masterarbeit/LipidomeComparison/data/Probe-Datensatz_lisa.csv"
test_path <- "/home/lisa/FH/Masterarbeit/LipidomeComparison/data/test.csv"
# load data
lipid_data <- read.csv(input_path, header = TRUE, sep = ",", dec = ".", row.names = 1) #read data
lipid_data <- t(lipid_data)
test_data <- read.csv(test_path, header = TRUE, sep = ",", dec = ".", row.names = 1) #read data
test_data <- as.data.frame(t(test_data))
working_data <- test_data
# summary biological & technical replicates
sample_ID <- list(substr(row.names(working_data), 1, 3)) # letter 1-3 identify the sample
biol_replicate <- list(substr(row.names(working_data), 1, 5)) # letter 1-5 identify the biological replicates
means_biol <- as.data.frame(aggregate(working_data, by=sample_ID, FUN=mean)) # grouping by sample-ID calculates the mean over all biological replicates
means_tech <- as.data.frame(aggregate(working_data, by=biol_replicate, FUN=mean)) # grouping by biological replicate calculates the mean over all technical replicates
plist <- list()
for (i in 2:ncol(means_tech[,1: ncol(means_tech)])){
p1 <- ggplot(means_tech, aes(sample=means_tech[, i]))+stat_qq()+stat_qq_line()+labs(title = colnames(means_tech)[i])
plotlist[[i]] <- p1
}
plist
plotlist <- list()
for (i in 2:ncol(means_tech[,1: ncol(means_tech)])){
p1 <- ggplot(means_tech, aes(sample=means_tech[, i]))+stat_qq()+stat_qq_line()+labs(title = colnames(means_tech)[i])
plotlist[[i]] <- p1
}
arrangeGrob(grobs = plist)
plotlist
arrangeGrob(grobs = plist)
arrangeGrob(grobs = plotlist)
arrangeGrob(grobs = plotlist[2:3])
grid.arrange(grobs = plotlist[2:3])
grid.arrange(grobs = plotlist[2:ncol(means_tech)])
n_plots <- length(plotlist)
nCol <- floor(sqrt(n_plots))
grid.arrange(grobs = plotlist[2:ncol(means_tech)], ncol = nCol)
working_data <- lipid_data
# summary biological & technical replicates
sample_ID <- list(substr(row.names(working_data), 1, 3)) # letter 1-3 identify the sample
biol_replicate <- list(substr(row.names(working_data), 1, 5)) # letter 1-5 identify the biological replicates
means_biol <- as.data.frame(aggregate(working_data, by=sample_ID, FUN=mean)) # grouping by sample-ID calculates the mean over all biological replicates
means_tech <- as.data.frame(aggregate(working_data, by=biol_replicate, FUN=mean)) # grouping by biological replicate calculates the mean over all technical replicates
plotlist <- list()
for (i in 2:ncol(means_tech[,1: ncol(means_tech)])){
p1 <- ggplot(means_tech, aes(sample=means_tech[, i]))+stat_qq()+stat_qq_line()+labs(title = colnames(means_tech)[i])
plotlist[[i]] <- p1
}
n_plots <- length(plotlist)
nCol <- floor(sqrt(n_plots))
grid.arrange(grobs = plotlist[2:ncol(means_tech)], ncol = nCol)
plot_qq <- function(sample_df){
plotlist <- list()
for (i in 2:ncol(means_tech[,1: ncol(means_tech)])){
p1 <- ggplot(means_tech, aes(sample=means_tech[, i]))+stat_qq()+stat_qq_line()+labs(title = colnames(means_tech)[i])
plotlist[[i]] <- p1
}
n_plots <- length(plotlist)
nCol <- floor(sqrt(n_plots))
grid.arrange(grobs = plotlist[2:ncol(means_tech)], ncol = nCol)
}
plot_qq(means_biol)
working_data <- test_data
plot_qq(means_biol)
# summary biological & technical replicates
sample_ID <- list(substr(row.names(working_data), 1, 3)) # letter 1-3 identify the sample
biol_replicate <- list(substr(row.names(working_data), 1, 5)) # letter 1-5 identify the biological replicates
means_biol <- as.data.frame(aggregate(working_data, by=sample_ID, FUN=mean)) # grouping by sample-ID calculates the mean over all biological replicates
means_tech <- as.data.frame(aggregate(working_data, by=biol_replicate, FUN=mean)) # grouping by biological replicate calculates the mean over all technical replicates
plot_qq <- function(sample_df){
plotlist <- list()
for (i in 2:ncol(sample_df[,1: ncol(sample_df)])){
p1 <- ggplot(sample_df, aes(sample=sample_df[, i]))+stat_qq()+stat_qq_line()+labs(title = colnames(means_tech)[i])
plotlist[[i]] <- p1
}
n_plots <- length(plotlist)
nCol <- floor(sqrt(n_plots))
grid.arrange(grobs = plotlist[2:ncol(sample_df)], ncol = nCol)
}
plot_qq(means_biol)
plot_qq(means_tech)
plot_qq(means_tech)
plot_qq <- function(sample_df,plot_type){
plotlist <- list()
for (i in 2:ncol(sample_df[,1: ncol(sample_df)])){
p1 <- ggplot(sample_df, aes(sample=sample_df[, i]))
if(plot_type=="qqplot"){
p1 <- p1 +stat_qq()+stat_qq_line()
}
else{
print("error")
}
p1 <- p1 + labs(title = colnames(means_tech)[i])
plotlist[[i]] <- p1
}
n_plots <- length(plotlist)
nCol <- floor(sqrt(n_plots))
grid.arrange(grobs = plotlist[2:ncol(sample_df)], ncol = nCol)
}
plot_qq(means_tech, qqplot)
plot_qq <- function(sample_df,plot_type){
plotlist <- list()
for (i in 2:ncol(sample_df[,1: ncol(sample_df)])){
p1 <- ggplot(sample_df, aes(sample=sample_df[, i]))
if(plot_type==qqplot){
p1 <- p1 +stat_qq()+stat_qq_line()
}
else{
print("error")
}
p1 <- p1 + labs(title = colnames(means_tech)[i])
plotlist[[i]] <- p1
}
n_plots <- length(plotlist)
nCol <- floor(sqrt(n_plots))
grid.arrange(grobs = plotlist[2:ncol(sample_df)], ncol = nCol)
}
plot_qq(means_tech, qqplot)
plot_qq(means_tech, "qqplot")
plot_qq <- function(sample_df,plot_type){
print(plot_type)
plotlist <- list()
for (i in 2:ncol(sample_df[,1: ncol(sample_df)])){
p1 <- ggplot(sample_df, aes(sample=sample_df[, i]))
p1 <- p1 +stat_qq()+stat_qq_line()
p1 <- p1 + labs(title = colnames(means_tech)[i])
plotlist[[i]] <- p1
}
n_plots <- length(plotlist)
nCol <- floor(sqrt(n_plots))
grid.arrange(grobs = plotlist[2:ncol(sample_df)], ncol = nCol)
}
plot_qq(means_tech, "qqplot")
plot_qq <- function(sample_df,plot_type){
print(plot_type)
plotlist <- list()
for (i in 2:ncol(sample_df[,1: ncol(sample_df)])){
p1 <- ggplot(sample_df, aes(sample=sample_df[, i]))
p1 <- p1 +stat_qq()+stat_qq_line()
p1 <- p1 + labs(title = colnames(means_tech)[i])
if (plot_type=="qqplot"){
print("True")
}
plotlist[[i]] <- p1
}
n_plots <- length(plotlist)
nCol <- floor(sqrt(n_plots))
grid.arrange(grobs = plotlist[2:ncol(sample_df)], ncol = nCol)
}
plot_qq(means_tech, "qqplot")
plot_qq <- function(sample_df,plot_type){
print(plot_type)
plotlist <- list()
for (i in 2:ncol(sample_df[,1: ncol(sample_df)])){
p1 <- ggplot(sample_df, aes(sample=sample_df[, i]))
p1 <- p1 + labs(title = colnames(means_tech)[i])
if (plot_type=="qqplot"){
p1 <- p1 +stat_qq()+stat_qq_line()
}
plotlist[[i]] <- p1
}
n_plots <- length(plotlist)
nCol <- floor(sqrt(n_plots))
grid.arrange(grobs = plotlist[2:ncol(sample_df)], ncol = nCol)
}
plot_qq(means_tech, "qqplot")
plot_qq <- function(sample_df,plot_type){
print(plot_type)
plotlist <- list()
for (i in 2:ncol(sample_df[,1: ncol(sample_df)])){
p1 <- ggplot(sample_df, aes(sample=sample_df[, i]))
p1 <- p1 + labs(title = colnames(means_tech)[i])
if (plot_type=="qqplot"){
p1 <- p1 +stat_qq()+stat_qq_line()
}
else if(plot_type=="boxplot"){
p1 <- p1 + geom_boxplot()
}
plotlist[[i]] <- p1
}
n_plots <- length(plotlist)
nCol <- floor(sqrt(n_plots))
grid.arrange(grobs = plotlist[2:ncol(sample_df)], ncol = nCol)
}
plot_qq(means_tech, "boxplot")
means_biol[1,1]
means_biol[1]
means_tech[1]
means_tech[,1]
means_tech[[1]]
means_tech
plot_qq <- function(sample_df,plot_type){
print(plot_type)
plotlist <- list()
for (i in 2:ncol(sample_df[,1: ncol(sample_df)])){
if (plot_type=="qqplot"){
p1 <- ggplot(sample_df, aes(sample=sample_df[, i]))
p1 <- p1 + labs(title = colnames(means_tech)[i])
p1 <- p1 +stat_qq()+stat_qq_line()
}
else if(plot_type=="boxplot"){
p1 <- ggplot(sample_df, aes(x=sample_df[1], y=sample_df[, i])) +
geom_boxplot()
}
plotlist[[i]] <- p1
}
n_plots <- length(plotlist)
nCol <- floor(sqrt(n_plots))
grid.arrange(grobs = plotlist[2:ncol(sample_df)], ncol = nCol)
}
plot_qq(means_tech, "boxplot")
p1 <- ggplot(sample_df, aes(x=sample_df[1], y=sample_df[, 1])) +
geom_boxplot()
p1 <- ggplot(means_tech, aes(x=means_tech[1], y=means_tech[, 1])) +
geom_boxplot()
p1
View(means_tech)
View(means_tech)
p1 <- ggplot(working_data, aes(x=working_data[1], y=working_data[, 1])) +
geom_boxplot()
p1
working_data
means_biol
means_tech
p1 <- ggplot(means_tech, aes(x=means_tech$Group.1, y=means_tech$`12-HETE`)) +
geom_boxplot()
p1
p1 <- ggplot(means_tech, aes(x=means_tech$Group.1, y=means_tech[$`12-HETE`[,1])) +
p1 <- ggplot(means_tech, aes(x=means_tech$Group.1, y=means_tech[,1])) +
geom_boxplot()
p1
for (i in 2:ncol(sample_df[,1: ncol(sample_df)])){
p1 <- ggplot(means_tech, aes(x=means_tech$Group.1, y=means_tech[,i])) +
geom_boxplot()
# plotlist[[i]] <- p1
print(p1)
}
for (i in 2:ncol(means_tech[,1: ncol(means_tech)])){
p1 <- ggplot(means_tech, aes(x=means_tech$Group.1, y=means_tech[,i])) +
geom_boxplot()
# plotlist[[i]] <- p1
print(p1)
}
for (i in 2:ncol(means_tech[,1: ncol(means_tech)])){
p1 <- ggplot(means_tech, aes(x=means_tech$Group.1, y=means_tech[,i])) +
geom_boxplot()+labs(title = colnames(means_tech)[i])
# plotlist[[i]] <- p1
print(p1)
}
for (i in 2:ncol(means_tech[,1: ncol(means_tech)])){
p1 <- ggplot(means_tech, aes(x=means_tech$Group.1, y=means_tech[,i])) +
geom_boxplot()+labs(title = colnames(means_tech)[i])
# plotlist[[i]] <- p1
print(p1)
}
View(means_tech)
means_tech[1]
for (i in 2:ncol(means_tech[,1: ncol(means_tech)])){
p1 <- ggplot(means_tech, aes(x=means_tech[1], y=means_tech[,i]))
p1 <- p1 + geom_boxplot()+labs(title = colnames(means_tech)[i])
# plotlist[[i]] <- p1
print(p1)
}
for (i in 2:ncol(means_tech[,1: ncol(means_tech)])){
p1 <- ggplot(means_tech, aes(x=means_tech[2], y=means_tech[,i]))
p1 <- p1 + geom_boxplot()+labs(title = colnames(means_tech)[i])
# plotlist[[i]] <- p1
print(p1)
}
means_tech[1]
means_tech[2]
means_tech[,2]
for (i in 2:ncol(means_tech[,1: ncol(means_tech)])){
p1 <- ggplot(means_tech, aes(x=means_tech[2:4], y=means_tech[,i]))
p1 <- p1 + geom_boxplot()+labs(title = colnames(means_tech)[i])
# plotlist[[i]] <- p1
print(p1)
}
means_tech$Group.1
means_tech[[1]]
for (i in 2:ncol(means_tech[,1: ncol(means_tech)])){
p1 <- ggplot(means_tech, aes(x=means_tech[[1]], y=means_tech[,i]))
p1 <- p1 + geom_boxplot()+labs(title = colnames(means_tech)[i])
# plotlist[[i]] <- p1
print(p1)
}
plot_qq <- function(sample_df,plot_type){
print(plot_type)
plotlist <- list()
for (i in 2:ncol(sample_df[,1: ncol(sample_df)])){
# if (plot_type=="qqplot"){
#   p1 <- ggplot(sample_df, aes(sample=sample_df[, i]))
#   p1 <- p1 + labs(title = colnames(means_tech)[i])
#   p1 <- p1 +stat_qq()+stat_qq_line()
# }
p1 <- ggplot(means_tech, aes(x=means_tech[[1]], y=means_tech[,i]))
p1 <- p1 + geom_boxplot()+labs(title = colnames(means_tech)[i])
# plotlist[[i]] <- p1
print(p1)
plotlist[[i]] <- p1
}
n_plots <- length(plotlist)
nCol <- floor(sqrt(n_plots))
grid.arrange(grobs = plotlist[2:ncol(sample_df)], ncol = nCol)
}
plot_qq(means_tech, "boxplot")
plot_qq <- function(sample_df,plot_type){
print(plot_type)
plotlist <- list()
for (i in 2:ncol(sample_df[,1: ncol(sample_df)])){
if (plot_type=="qqplot"){
p1 <- ggplot(sample_df, aes(sample=sample_df[, i]))
p1 <- p1 + labs(title = colnames(means_tech)[i])
p1 <- p1 +stat_qq()+stat_qq_line()
}
else if(plot_type=="boxplot"){
p1 <- ggplot(means_tech, aes(x=means_tech[[1]], y=means_tech[,i]))
p1 <- p1 + geom_boxplot()+labs(title = colnames(means_tech)[i])
}
plotlist[[i]] <- p1
}
n_plots <- length(plotlist)
nCol <- floor(sqrt(n_plots))
grid.arrange(grobs = plotlist[2:ncol(sample_df)], ncol = nCol)
}
plot_qq(means_tech, "boxplot")
plot_qq <- function(sample_df,plot_type){
print(plot_type)
plotlist <- list()
for (i in 2:ncol(sample_df[,1: ncol(sample_df)])){
if (plot_type=="qqplot"){
p1 <- ggplot(sample_df, aes(sample=sample_df[, i]))
p1 <- p1 + labs(title = colnames(means_tech)[i])
p1 <- p1 +stat_qq()+stat_qq_line()
}
else if(plot_type=="boxplot"){
p1 <- ggplot(means_tech, aes(x=means_tech[[1]], y=means_tech[,i]))
p1 <- p1 + geom_boxplot()+labs(title = colnames(means_tech)[i])
}
else if(plot_type=="histogram"){
p1 <- ggplot(means_tech, aes(x=means_tech[[1]], y=means_tech[,i]))
p1 <- p1 + geom_histogram()+labs(title = colnames(means_tech)[i])
}
plotlist[[i]] <- p1
}
n_plots <- length(plotlist)
nCol <- floor(sqrt(n_plots))
grid.arrange(grobs = plotlist[2:ncol(sample_df)], ncol = nCol)
}
plot_qq(means_tech, "histogram")
plot_qq <- function(sample_df,plot_type){
print(plot_type)
plotlist <- list()
for (i in 2:ncol(sample_df[,1: ncol(sample_df)])){
if (plot_type=="qqplot"){
p1 <- ggplot(sample_df, aes(sample=sample_df[, i]))
p1 <- p1 + labs(title = colnames(means_tech)[i])
p1 <- p1 +stat_qq()+stat_qq_line()
}
else if(plot_type=="boxplot"){
p1 <- ggplot(means_tech, aes(x=means_tech[[1]], y=means_tech[,i]))
p1 <- p1 + geom_boxplot()+labs(title = colnames(means_tech)[i])
}
else if(plot_type=="histogram"){
p1 <- ggplot(means_tech, aes(means_tech[,i]))
p1 <- p1 + geom_histogram()+labs(title = colnames(means_tech)[i])
}
plotlist[[i]] <- p1
}
n_plots <- length(plotlist)
nCol <- floor(sqrt(n_plots))
grid.arrange(grobs = plotlist[2:ncol(sample_df)], ncol = nCol)
}
plot_qq(means_tech, "histogram")
plot_qq(working_data, "histogram")
working_data
working_data <- lipid_data
plot_qq(working_data, "histogram")
plot_qq(working_data, "qqplot")
working_data <- lipid_data
# summary biological & technical replicates
sample_ID <- list(substr(row.names(working_data), 1, 3)) # letter 1-3 identify the sample
biol_replicate <- list(substr(row.names(working_data), 1, 5)) # letter 1-5 identify the biological replicates
means_biol <- as.data.frame(aggregate(working_data, by=sample_ID, FUN=mean)) # grouping by sample-ID calculates the mean over all biological replicates
means_tech <- as.data.frame(aggregate(working_data, by=biol_replicate, FUN=mean)) # grouping by biological replicate calculates the mean over all technical replicates
plot_qq(means_tech, "qqplot")
plot_qq(means_tech, "boxplot")
